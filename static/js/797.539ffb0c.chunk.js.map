{"version":3,"file":"static/js/797.539ffb0c.chunk.js","mappings":"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","sources":["components/API/api.js","components/MovieDetailsItem/MovieDetailsItem.jsx","pages/MoviesPage.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// const BASE_URL = 'https://api.themoviedb.org/3/trending/movie'\nlet url = null;\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyZmE4YzE2NTE5Mzk1NjVmMjI4MWU1MDY0MzJjYWIwMyIsInN1YiI6IjY0NzRlZTJjOTI0Y2U2MDBkY2IyODliYSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.2X4n5YSX4hGgZkP27xnajtjEfUPUoPxkoDMVouWB-ek',\n  },\n};\n// 569094\nconst searchFilm = async params => {\n  if (params?.type === 'trend')\n    url = 'https://api.themoviedb.org/3/trending/all/day?language=en-US';\n  if (params?.type === 'movies')\n    url = `https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=${params.search}`;\n  if (params?.type === 'details')\n    url = `https://api.themoviedb.org/3/movie/${params.searchId}?language=en-US`;\n  if (params?.type === 'credits')\n    url = `https://api.themoviedb.org/3/movie/${params.searchId}/credits?language=en-US`;\n  if (params?.type === 'review')\n    url = `https://api.themoviedb.org/3/movie/${params.searchId}/reviews?language=en-US&page=1`;\n  if (params?.type === 'images')\n    url = `https://api.themoviedb.org/3/movie/${params.searchId}/images`;\n\n  try {\n    if (!url) return;\n    const data = await fetch(url, options);\n    console.log('data :>> ', data);\n    const response = await data.json();\n    console.log('response in api .json() :>> ', await response);\n    return await response;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default searchFilm;\n\n// 1\n// fetch('https://api.themoviedb.org/3/trending/movie/day?language=en-US', options)\n//   .then(response => response.json())\n//   .then(response => console.log(response))\n//   .catch(err => console.error(err));\n\n// 2\n// fetch('https://api.themoviedb.org/3/search/movie?include_adult=false&language=en-US&page=1&query=batman', options)\n\n// 3\n// fetch('https://api.themoviedb.org/3/movie/movie_id?language=en-US', options)\n\n// 4\n// fetch('https://api.themoviedb.org/3/movie/movie_id/credits?language=en-US', options)\n\n// 5\n// fetch('https://api.themoviedb.org/3/movie/movie_id/reviews?language=en-US&page=1', options)\n\n// images\n// fetch('https://api.themoviedb.org/3/movie/movie_id/images', options)\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\n\nconst MovieDetailsItem = (params) => {\n\n  const location = useLocation()\n\n  const getLink = (filmId) => {\n    if (params?.from === 'homepage') return `movies/${filmId}`\n    return `${filmId}`\n  }\n\n  return (\n    <ul>\n      {params.films.map(film => (\n        <li key={film.id}>\n          <Link to={getLink(film.id)} state={location}>{film.title || film.name}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieDetailsItem;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport searchFilm from 'components/API/api';\nimport MovieDetailsItem from 'components/MovieDetailsItem/MovieDetailsItem';\n\nconst MoviesPage = () => {\n  const [toggle, settoggle] = useState(false);\n  const [searchResponse, setSearchResponse] = useState([]);\n  const location = useLocation()\n\n  const [searchFilms, setSearchFilms] = useSearchParams();\n  const filmName = searchFilms.get('name') ?? '';\n\n  const updateQueryString = e => {\n    const name = e.target.value.toLowerCase();\n    const nextParams = name !== '' ? { name } : {};\n    setSearchFilms(nextParams);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    settoggle(true);\n  };\n\n  useEffect(() => {\n    if (toggle || filmName !== '') {\n      async function fetchData() {\n        const response = await searchFilm({\n          type: 'movies',\n          search: filmName,\n        });\n        console.log('response in details page :>> ', response);\n        setSearchResponse(response?.results);\n        settoggle(false);\n      }\n\n      fetchData();\n    }\n  }, [toggle, filmName]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"\">\n          <input type=\"text\" value={filmName} onChange={updateQueryString} />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {searchResponse.length !== 0 && <MovieDetailsItem films={searchResponse} state={ location} />}\n    </>\n  );\n};\n\nexport default MoviesPage;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["url","options","method","headers","accept","Authorization","searchFilm","params","type","search","searchId","fetch","data","console","log","json","response","location","useLocation","films","map","film","to","filmId","id","from","state","title","name","useState","toggle","settoggle","searchResponse","setSearchResponse","useSearchParams","searchFilms","setSearchFilms","filmName","get","useEffect","fetchData","results","onSubmit","e","preventDefault","htmlFor","value","onChange","target","toLowerCase","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}